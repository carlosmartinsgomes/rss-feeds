# .github/workflows/feeds-hourly.yml
name: Hourly feeds -> email new items

on:
  
  workflow_dispatch:

jobs:
  build-and-notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download previous feeds_summary artifact (if any)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          python3 scripts/download_prev_artifact.py feeds_summary || true

      
      - name: "Debug: show scripts dir & rendered files (before generate)"
        run: |
          echo "PWD: $(pwd)"
          echo "ls -la scripts:"
          ls -la scripts || true
          echo "ls -la scripts/rendered (if exists):"
          ls -la scripts/rendered || true
          echo "Show first 60 lines of a couple of rendered files (if present):"
          test -f scripts/rendered/exchangewire.html && head -n 60 scripts/rendered/exchangewire.html || echo "exchangewire.html missing"
          test -f scripts/rendered/yahoo.html && head -n 60 scripts/rendered/yahoo.html || echo "yahoo.html missing"

      - name: Install Node & Playwright (only if needed) and run renders
        shell: bash
        run: |
          set -e
          mkdir -p scripts/rendered
          # if run_renders.js present, favour it (parallel render)
          if [ -f "scripts/run_renders.js" ]; then
            echo "Found run_renders.js -> running it"
            # install node only if node is missing
            if ! command -v node >/dev/null 2>&1; then
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - || true
              sudo apt-get install -y nodejs build-essential || true
            fi
            if [ ! -d "scripts/node_modules/playwright" ]; then
              npm install --prefix scripts playwright --no-audit --no-fund --silent || true
            fi
            npx --yes --prefix scripts playwright install chromium || true
            node scripts/run_renders.js || echo "run_renders.js returned non-zero"
          else
            echo "No run_renders.js: running selected render_page.js for exchangewire & yahoo (adjust if needed)"
            if [ -f "scripts/render_page.js" ]; then
              if ! command -v node >/dev/null 2>&1; then
                curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash - || true
                sudo apt-get install -y nodejs build-essential || true
              fi
              npm install --prefix scripts playwright --no-audit --no-fund --silent || true
              npx --yes --prefix scripts playwright install chromium || true
              node scripts/render_page.js "https://www.exchangewire.com/?s=pubmatic" "scripts/rendered/exchangewire.html" || echo "render exchangewire failed"
              node scripts/render_page.js "https://finance.yahoo.com/quotes/TTD,PUBM,INMD,CRWD,FTNT,DDOG,PINS,MNDY,HUBS,ETSY,ONON,RBRK,ANET,DUOL,GTLB,ALAB,AXON,DAVA,EPAM,HIMS,LUV,PAYC/" "scripts/rendered/yahoo.html" || echo "render yahoo failed"
            else
              echo "render_page.js missing -> skipping render"
            fi
          fi

      - name: "Diagnostic: check sites config render_file mapping (quick python)"
        shell: bash
        run: |
          python3 - <<'PY'
import json, os, sys
cfg_path = "scripts/sites.json"
if not os.path.exists(cfg_path):
    print("sites.json not found at scripts/sites.json")
    sys.exit(0)
cfg = json.load(open(cfg_path))
for s in cfg:
    name = s.get("name","<noname>")
    rf = s.get("render_file")
    if not rf:
        print(f"{name}: NO render_file")
    else:
        exists = os.path.exists(rf)
        size = os.path.getsize(rf) if exists else 0
        print(f"{name}: render_file={rf} exists={exists} size={size}")
PY

      
      - name: Run generate_feeds.py
        run: |
          python3 scripts/generate_feeds.py

      - name: Run feeds_to_excel.py
        run: |
          python3 scripts/feeds_to_excel.py

      
      - name: Compare current vs previous and send email (if new)
        # não queremos que um problema de email faça o job inteiro falhar
        continue-on-error: false   # opcional: podes colocar true para nunca falhar o job
        env:
          # canonical names (preferidos)
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}

          # legacy/alternate secret names (se tens secrets com estes nomes)
          SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
          SMTP_USERNAME: ${{ secrets.SMTP_USERNAME }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}

          # dobrar nomes para compatibilidade (garante que o script encontra pelo menos um)
          # Se só existe um dos nomes acima, esse será passado (o outro fica vazio).
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}

          # parâmetros para o script
          FEEDS_XLSX: feeds_summary.xlsx
          SENT_IDS_FILE: .github/data/sent_ids.json

        run: |
          python3 scripts/compare_and_email.py


      - name: Upload current feeds_summary.xlsx as artifact (to be used next run)
        uses: actions/upload-artifact@v4
        with:
          name: feeds_summary
          path: feeds_summary.xlsx

