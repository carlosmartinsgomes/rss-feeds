name: Run feed generator (remote)

on:
  workflow_dispatch:

jobs:
  run-generator:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests beautifulsoup4 feedgen lxml python-dateutil
          fi

      - name: Ensure output dir exists
        run: |
          mkdir -p feeds
          ls -la

      - name: Run feed generator (Python)
        id: run_gen
        run: |
          set -o pipefail
          python3 scripts/generate_feeds.py 2>&1 | tee run_generate.log
          exit ${PIPESTATUS[0]}
        shell: bash

      - name: Show produced feeds (sample & counts)
        if: always()
        run: |
          echo "=== feeds dir listing ==="
          ls -la feeds || true
          echo "=== sample of each feed (first 40 lines) ==="
          for f in feeds/*.xml; do
            echo "---- $f ----"
            head -n 40 "$f" || true
          done
          echo "=== tail of run log ==="
          test -f run_generate.log && tail -n 200 run_generate.log || true

      - name: Create timestamped zip of feeds
        if: always()
        env:
          ZIPNAME: feeds-${{ github.run_id }}-${{ github.run_number }}.zip
        run: |
          echo "ZIPNAME=$ZIPNAME"
          # se não houver xmls, criamos um placeholder para garantir que o zip existe
          if ls feeds/*.xml 1> /dev/null 2>&1; then
            zip -r "$ZIPNAME" feeds || true
          else
            echo "No xml files found in feeds/ -> creating placeholder"
            mkdir -p feeds
            echo "no-feeds" > feeds/placeholder.txt
            zip -r "$ZIPNAME" feeds || true
          fi
          ls -la "$ZIPNAME"

      - name: Upload feeds artifact (zip)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: feeds-${{ github.run_id }}-${{ github.run_number }}
          path: feeds-${{ github.run_id }}-${{ github.run_number }}.zip
          retention-days: 7

      - name: Upload run log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-generate-log-${{ github.run_id }}-${{ github.run_number }}
          path: run_generate.log
          retention-days: 7

      - name: Optional: Commit merged feed (dist/merged-feed.xml) back to repo
        if: always()
        run: |
          # só tenta commitar se existir o ficheiro
          if [ -f dist/merged-feed.xml ]; then
            git config user.name "github-actions[bot]"
            git config user.email "actions@github.com"
            git add dist/merged-feed.xml || true
            # verificar se há mudanças staged
            if git diff --cached --quiet; then
              echo "No changes to commit for dist/merged-feed.xml"
            else
              git commit -m "Update merged feed (auto)" || true
              # push usando token fornecido pelo checkout (poderá necessitar de permissões)
              git push || echo "git push failed (token/permission?)"
            fi
          else
            echo "No dist/merged-feed.xml found -> skipping commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
