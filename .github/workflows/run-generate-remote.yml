name: Run feed generator (remote)

on:
  workflow_dispatch:
  

jobs:
  run-generator:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests beautifulsoup4 feedgen lxml python-dateutil
          fi

      
      - name: Ensure output dir exists
        run: |
          mkdir -p feeds
          ls -la

      - name: Install Playwright (Chromium) for rendering
        run: |
          # instala playwright (pequeno) e o browser chromium
          python -m pip install --upgrade pip || true
          npm install playwright@1.40.0 || npm install playwright || true
          npx playwright install chromium
        shell: bash

      - name: Render dynamic pages to scripts/rendered (Playwright)
        run: |
          # assegurar pasta
          mkdir -p scripts/rendered

          # darkreading (usa waitSelector que representa os itens)
          node scripts/render_page.js "https://www.darkreading.com/latest-news" "scripts/rendered/darkreading.html" ".ListPreview-Container .ListPreview-ContentWrapper" 45000 60000 || echo "render darkreading failed"

          # dzone (se quiseres renderizar; ajusta waitSelector se necessário)
          node scripts/render_page.js "https://dzone.com/list" "scripts/rendered/dzone.html" "#ftl-tagging div.article-block" 30000 45000 || echo "render dzone failed"

          # digiday (se quiseres)
          node scripts/render_page.js "https://digiday.com/" "scripts/rendered/digiday.html" ".big-part ul li, #latest_stories" 35000 45000 || echo "render digiday failed"

          # adage (se precisa render)
          node scripts/render_page.js "https://adage.com/news/" "scripts/rendered/adage.html" "#main-content" 45000 60000 || echo "render adage failed"

          # listar os ficheiros renderizados para confirmar
          ls -l scripts/rendered || true

          # debug: mostrar início do ficheiro darkreading para ver se os nós estão lá
          echo "---- head of scripts/rendered/darkreading.html ----"
          sed -n '1,120p' scripts/rendered/darkreading.html || true
          echo "---- tail (last 120 lines) ----"
          tail -n 120 scripts/rendered/darkreading.html || true
        shell: bash
    

      - name: Run feed generator (Python)
        id: run_gen
        run: |
          set -o pipefail
          python3 scripts/generate_feeds.py 2>&1 | tee run_generate.log
          exit ${PIPESTATUS[0]}
        shell: bash

      - name: List feeds dir (debug)
        run: |
          echo "=== Listing feeds/*.xml in workspace ==="
          ls -la "${{ github.workspace }}/feeds" || true

      - name: Show first lines of each feed (debug)
        run: |
          sh -c 'for f in "${{ github.workspace }}/feeds"/*.xml; do
            if [ -f "$f" ]; then
              echo "---- $f ----"
              head -n 20 "$f" || true
            fi
          done'

      - name: Upload feeds XMLs (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: feeds-xml-${{ github.run_id }}-${{ github.run_number }}
          path: feeds/*.xml
          if-no-files-found: warn
          retention-days: 7
  

      - name: Install tiny extras for Excel export
        run: |
          python -m pip install --upgrade pip
          pip install pandas openpyxl feedparser beautifulsoup4

      - name: Generate Excel summary of feeds
        run: |
          python3 scripts/feeds_to_excel.py
        shell: bash

      
      - name: Install email helper deps
        run: |
          python -m pip install --upgrade pip
          pip install pandas openpyxl

      
      - name: Debug: quais variáveis SMTP/EMAIL existem (não mostra valores)
        run: |
          for v in SMTP_HOST SMTP_SERVER SMTP_PORT SMTP_USER SMTP_USERNAME SMTP_PASS SMTP_PASSWORD EMAIL_FROM EMAIL_TO SMTP_USE_SSL; do
            if [ -n "${!v:-}" ]; then
              echo "$v = SET"
            else
              echo "$v = UNSET"
            fi
          done

      - name: Install email helper deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install pandas openpyxl

      - name: Run compare & email (compare_and_email.py)
        env:
          # preferimos os nomes canonical que definiste nos Secrets
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
          EMAIL_TO: ${{ secrets.EMAIL_TO }}
          SMTP_USE_SSL: ${{ secrets.SMTP_USE_SSL }}

          # dobrar nomes (compatibilidade com scripts que esperam SMTP_SERVER / SMTP_USERNAME / SMTP_PASSWORD)
          SMTP_SERVER: ${{ secrets.SMTP_HOST }}
          SMTP_USERNAME: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASS }}

          # parametros para o script
          FEEDS_XLSX: feeds_summary.xlsx
          SENT_IDS_FILE: .github/data/sent_ids.json
        run: |
          python3 scripts/compare_and_email.py


      - name: Commit & push sent ids (if changed)
        if: ${{ always() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          mkdir -p .github/data
          git add .github/data/sent_ids.json || true
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: update sent_ids from workflow run $GITHUB_RUN_ID" || true
            git push "https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git" HEAD:${GITHUB_REF#refs/heads/} || true
          fi


      - name: Upload feeds Excel artifact
        uses: actions/upload-artifact@v4
        with:
          name: feeds-summary-${{ github.run_id }}-${{ github.run_number }}
          path: feeds_summary.xlsx
          if-no-files-found: warn
          retention-days: 7
  

      - name: Debug listing (after generate)
        run: |
          echo "PWD: $(pwd)"
          ls -la
          ls -la feeds || true
          find . -maxdepth 3 -type f -name "*.xml" -print || true

      - name: Show produced feeds (sample & counts)
        if: always()
        run: |
          echo "=== Feeds dir listing (workspace) ==="
          ls -la feeds || true
          for f in feeds/*.xml; do
            echo "---- $f ----"
            head -n 40 "$f" || true
          done
          test -f run_generate.log && tail -n 200 run_generate.log || true
        shell: bash

      - name: Create zip of feeds (safe)
        id: create_zip
        run: |
          set -e
          ZIPNAME=feeds-${{ github.run_id }}-${{ github.run_number }}.zip
          mkdir -p feeds
          if ls feeds/*.xml 1> /dev/null 2>&1; then
            zip -r "$ZIPNAME" feeds || true
          else
            echo "No XML feeds found — creating placeholder" >&2
            echo "no-feeds" > feeds/placeholder.txt
            zip -r "$ZIPNAME" feeds || true
          fi
          ls -la "$ZIPNAME"
          echo "zipname=$ZIPNAME" >> $GITHUB_OUTPUT
        shell: bash

      - name: Upload feeds artifact (zip)
        uses: actions/upload-artifact@v4
        with:
          name: feeds-${{ github.run_id }}-${{ github.run_number }}
          path: ${{ steps.create_zip.outputs.zipname }}
          if-no-files-found: warn
          retention-days: 7

      - name: Upload run log artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: run-generate-log-${{ github.run_id }}-${{ github.run_number }}
          path: run_generate.log
          retention-days: 7

      
