name: Generate RSS feeds (Node renderer + Python)

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 */2 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PYTHON_VERSION: '3.11'
      NODE_VERSION: '18'

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine scripts directory
        id: find_scripts
        run: |
          if [ -d "./scripts" ]; then
            echo "scripts_dir=scripts" >> $GITHUB_OUTPUT
          elif [ -d "./rss-feeds/scripts" ]; then
            echo "scripts_dir=rss-feeds/scripts" >> $GITHUB_OUTPUT
          else
            found=$(find . -type d -name scripts | head -n 1)
            found="${found#./}"
            echo "scripts_dir=$found" >> $GITHUB_OUTPUT
          fi
          echo "Detected scripts_dir=${{ steps.find_scripts.outputs.scripts_dir }}"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ${{ steps.find_scripts.outputs.scripts_dir }}/node_modules
            ~/.npm
          key: ${{ runner.os }}-playwright-cache-v1
          restore-keys: |
            ${{ runner.os }}-playwright-cache-v1

      - name: Install Playwright (Node) and deps
        if: steps.find_scripts.outputs.scripts_dir != ''
        run: |
          SCRIPTS_DIR="${{ steps.find_scripts.outputs.scripts_dir }}"
          echo "Using scripts dir: $SCRIPTS_DIR"
          cd "$SCRIPTS_DIR"
          export NPM_CONFIG_LOGLEVEL=error
          npm install playwright --no-audit --no-fund --silent --no-progress || true
          # instalar browsers (pode demorar; com cache ser√° evitado em runs seguintes)
          npx playwright install --with-deps

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python deps (explicit)
        run: |
          python -m pip install --upgrade pip
          if [ -f "requirements.txt" ]; then
            pip install -r requirements.txt
          elif [ -f "rss-feeds/requirements.txt" ]; then
            pip install -r rss-feeds/requirements.txt
          else
            pip install requests beautifulsoup4 feedgen lxml
          fi

      - name: Render pages that need JS (Node)
        run: |
          SCRIPTS_DIR="${{ steps.find_scripts.outputs.scripts_dir }}"
          if [ -z "$SCRIPTS_DIR" ]; then
            echo "No scripts dir found; skipping Node renders"
            exit 0
          fi
          mkdir -p "$SCRIPTS_DIR/rendered"
          echo "Rendering darkreading..."
          node "$SCRIPTS_DIR/render_page.js" https://www.darkreading.com/ "$SCRIPTS_DIR/rendered/darkreading.html" || echo "darkreading render failed"
          echo "Rendering iotworldtoday..."
          node "$SCRIPTS_DIR/render_page.js" https://www.iotworldtoday.com/ "$SCRIPTS_DIR/rendered/iotworldtoday.html" || echo "iotworldtoday render failed"
          echo "Rendered files listing:"
          ls -la "$SCRIPTS_DIR/rendered" || true

      - name: Debug - show some files (optional)
        run: |
          echo "Detected scripts dir: ${{ steps.find_scripts.outputs.scripts_dir }}"
          ls -la
          ls -la "${{ steps.find_scripts.outputs.scripts_dir }}" || true
          sed -n '1,200p' "${{ steps.find_scripts.outputs.scripts_dir }}/sites.json" || true
          head -n 5 "${{ steps.find_scripts.outputs.scripts_dir }}/rendered/darkreading.html" || true
          head -n 5 "${{ steps.find_scripts.outputs.scripts_dir }}/rendered/iotworldtoday.html" || true

      - name: Run feed generator (Python)
        run: |
          SCRIPTS_DIR="${{ steps.find_scripts.outputs.scripts_dir }}"
          if [ -f "${SCRIPTS_DIR}/generate_feeds.py" ]; then
            python3 "${SCRIPTS_DIR}/generate_feeds.py"
          elif [ -f "scripts/generate_feeds.py" ]; then
            python3 scripts/generate_feeds.py
          else
            echo "generate_feeds.py not found - aborting"
            exit 1
          fi

      - name: Commit feeds
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add feeds/*.xml || true
          git commit -m "Update feeds" || echo "no changes to commit"
          git push origin HEAD:main || echo "push failed"
